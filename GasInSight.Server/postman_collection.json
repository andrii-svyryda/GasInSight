{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "GasInSight API",
		"description": "Collection for GasInSight API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Root",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						""
					]
				},
				"description": "Welcome endpoint for GasInSight API"
			},
			"response": []
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token"
							]
						},
						"description": "Login to get access token and refresh token"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"{{refreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/refresh-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refresh-token"
							]
						},
						"description": "Get a new access token using refresh token"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users?skip=0&limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "Get all users (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"me"
							]
						},
						"description": "Get current user information"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "Get user by ID (admin only)"
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"newuser\",\n    \"email\": \"newuser@example.com\",\n    \"password\": \"password123\",\n    \"role\": \"User\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							]
						},
						"description": "Create a new user (admin only)"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"updateduser\",\n    \"email\": \"updated@example.com\",\n    \"password\": \"newpassword123\",\n    \"role\": \"User\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "Update user information (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "Delete a user (admin only, cannot delete self)"
					},
					"response": []
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Facilities",
			"item": [
				{
					"name": "Get All Facilities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/facilities?skip=0&limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"facilities"
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "Get all facilities (admin gets all, users get only those they have permission for)"
					},
					"response": []
				},
				{
					"name": "Get Facility by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/facilities/{{facilityId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"facilities",
								"{{facilityId}}"
							]
						},
						"description": "Get facility by ID (requires view permission)"
					},
					"response": []
				},
				{
					"name": "Update Facility",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Facility Name\",\n    \"location\": \"Updated Location\",\n    \"description\": \"Updated facility description\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/facilities/{{facilityId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"facilities",
								"{{facilityId}}"
							]
						},
						"description": "Update facility information (requires edit permission)"
					},
					"response": []
				}
			],
			"description": "Facility management endpoints"
		},
		{
			"name": "Sensors",
			"item": [
				{
					"name": "Get Sensors by Facility",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sensors?facility_id={{facilityId}}&skip=0&limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sensors"
							],
							"query": [
								{
									"key": "facility_id",
									"value": "{{facilityId}}"
								},
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "Get sensors by facility ID (requires view permission for the facility)"
					},
					"response": []
				},
				{
					"name": "Get Sensor by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sensors/{{sensorId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sensors",
								"{{sensorId}}"
							]
						},
						"description": "Get sensor by ID (requires view permission for the facility)"
					},
					"response": []
				},
				{
					"name": "Update Sensor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Sensor Name\",\n    \"description\": \"Updated sensor description\",\n    \"location\": \"Updated Location\",\n    \"type\": \"GAS\",\n    \"status\": \"ACTIVE\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sensors/{{sensorId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sensors",
								"{{sensorId}}"
							]
						},
						"description": "Update sensor information (requires edit permission for the facility)"
					},
					"response": []
				}
			],
			"description": "Sensor management endpoints"
		},
		{
			"name": "Sensor Records",
			"item": [
				{
					"name": "Get Sensor Records",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sensor-records/{{sensorId}}?start_date={{startDate}}&end_date={{endDate}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sensor-records",
								"{{sensorId}}"
							],
							"query": [
								{
									"key": "start_date",
									"value": "{{startDate}}"
								},
								{
									"key": "end_date",
									"value": "{{endDate}}"
								}
							]
						},
						"description": "Get sensor records by sensor ID and date range (requires view permission for the facility)"
					},
					"response": []
				}
			],
			"description": "Sensor records endpoints"
		},
		{
			"name": "Permissions",
			"item": [
				{
					"name": "Get Permissions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/permissions?user_id={{userId}}&facility_id={{facilityId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissions"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{userId}}",
									"description": "Optional"
								},
								{
									"key": "facility_id",
									"value": "{{facilityId}}",
									"description": "Optional"
								}
							]
						},
						"description": "Get permissions (admin only)"
					},
					"response": []
				},
				{
					"name": "Create Permission",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": {{userId}},\n    \"facility_id\": \"{{facilityId}}\",\n    \"permission_type\": \"View\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/permissions/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissions",
								""
							]
						},
						"description": "Create a new permission (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete Permission",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/permissions/{{permissionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissions",
								"{{permissionId}}"
							]
						},
						"description": "Delete a permission (admin only)"
					},
					"response": []
				}
			],
			"description": "Permission management endpoints"
		},
		{
			"name": "WebSockets",
			"item": [
				{
					"name": "Connect to Sensor WebSocket",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ws/{{sensorId}}?token={{accessToken}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ws",
								"{{sensorId}}"
							],
							"query": [
								{
									"key": "token",
									"value": "{{accessToken}}"
								}
							]
						},
						"description": "Connect to WebSocket for real-time sensor data (requires view permission for the facility)"
					},
					"response": []
				}
			],
			"description": "WebSocket endpoints for real-time data"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "username",
			"value": "admin@example.com",
			"type": "string"
		},
		{
			"key": "password",
			"value": "password123",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "facilityId",
			"value": "",
			"type": "string"
		},
		{
			"key": "sensorId",
			"value": "",
			"type": "string"
		},
		{
			"key": "permissionId",
			"value": "",
			"type": "string"
		},
		{
			"key": "startDate",
			"value": "2023-01-01T00:00:00Z",
			"type": "string"
		},
		{
			"key": "endDate",
			"value": "2023-12-31T23:59:59Z",
			"type": "string"
		}
	]
}
